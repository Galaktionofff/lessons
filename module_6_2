class Vehicle:
    def __init__(self, owner, __model, __engine_power, __color, __color_variants=None):
        if __color_variants is None:
            __color_variants = ['blue', 'red', 'green', 'black', 'white']
        self.__color_variants = __color_variants
        self.owner = str(owner)
        self.__model = str(__model)
        self.__engine_power = int(__engine_power)
        self.__color = str(__color)

    def get_model(self):
        return f'Модель: {self.__model}'

    def get_horsepower(self):
        return f'Мощность двигателя {self.__engine_power}'

    def get_color(self):
        return f'Цвет: {self.__color}'

    def print_info(self):
        print(f'{Vehicle.get_model(self)}\n{Vehicle.get_horsepower(self)}'
              f'\n{Vehicle.get_color(self)}\nВладелец:{self.owner}')

    def set_color(self, new_color):
        for i in range(len(self.__color_variants)):
            if new_color.lower() == self.__color_variants[i].lower():
                self.__color = new_color
            else:
                continue

class Sedan(Vehicle):
    _PASSENGER_LIMIT = 5
    pass

# Текущие цвета __COLOR_VARIANTS = ['blue', 'red', 'green', 'black', 'white']
vehicle1 = Sedan('Fedos', 'Toyota Mark II', 500, 'blue')

# Изначальные свойства
vehicle1.print_info()

# Меняем свойства (в т.ч. вызывая методы)
vehicle1.set_color('Pink')
vehicle1.set_color('BLACK')
vehicle1.owner = 'Vasyok'

# Проверяем что поменялось
vehicle1.print_info()
