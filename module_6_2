class Vehicle:
    def __init__(self, owner, __model, __engine_power, __color, __color_variants=None):
        if __color_variants is None:
            __color_variants = ['blue', 'red', 'green', 'black', 'white']
        owner = str
        __model = str
        __engine_power = int
        __color = str

    def get_model(self):
        return f'Модель: {Vehicle.__init__(}'

    def get_horsepower(self):
        return f'Мощность двигателя {self.__engine_power}'

    def get_color(self):
        return f'Цвет: {self.__color}'

    def print_info(self):
        print(Vehicle.get_model(self), Vehicle.get_horsepower(self), Vehicle.get_color(self), Vehicle.owner)

    def set_color(self, new_color):
        if new_color.lower() in Vehicle.__color_variants.lower():
            Vehicle._color = new_color
        else:
            print('Такой цвет нельзя')
class Sedan(Vehicle):
    _PASSENGER_LIMIT = 5
    pass

# Текущие цвета __COLOR_VARIANTS = ['blue', 'red', 'green', 'black', 'white']
vehicle1 = Sedan('Fedos', 'Toyota Mark II', 'blue', 500)

# Изначальные свойства
vehicle1.print_info()

# Меняем свойства (в т.ч. вызывая методы)
vehicle1.set_color('Pink')
vehicle1.set_color('BLACK')
vehicle1.owner = 'Vasyok'

# Проверяем что поменялось
vehicle1.print_info()
